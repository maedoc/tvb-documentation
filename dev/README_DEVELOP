
   1. INSTALL
   Please read the content of InstallBuildMachine.txt to find the procedure for installing TVB dependencies on your local Operating System.

   2. SPECIAL CONFIGURATIONS
   Tricky configurations (optional - it will most probably work without any change, but if you get into problems check them):
   
   Validate all settings in tvb/config.py. 
   You can change this when you start the application for the first time, as you will have a settings page displayed in your web client.
   Make sure whatever ports you specify for the web server and matplotlib server, are free for access.
   When running in a cluster, make sure "oarsub" command is available on the machine where the Web server runs.

   3. START SERVICES
   A. If you want to use a stand-alone version of the application, with web interface
   Execute start_local.sh (or bat), start a browser instance (WebGL compatible: Chrome >20 or Firefox >15 are recommended), 
   and then type URL: http://localhost:8080/tvb
   Default User is admin/pass (if you did not already changed this in settings).
   
   B. Stand Alone version with desktop interface
   Execute "python start desktop" A Python based Interface will pop-up.

   C. Start all services on cluster
   On each cluster node, only installing TVB framework should be enough, and making sure clusterLaunch is available in ~ (HOME folder).
   On Cluster web server: "python app.py start web", check the CLUSTER checkbox on settings page and make sure "oarsub" command is available.
   Access the application using: http://public.cluster.ip:8080/tvb

   4. STOP
   Execute "sh stop.sh" to stop all python processes having their PID registered in a TVB specific file.
   You can clean remove all TVB related files, by executing "sh clean.sh". 
   Clean.sh will also remove your DB - if SqLite whici is the default DB engine.
   In case you use a PostgreSQL DB, clean.sh will only remove session file, log files and stored GID files.
   To remove a PostgreSQL database, you should execute "python app.py start web reset"

   5. TIPS - CONSTRAINTS
   When adding an xml-interface based adapter be sure to:
	- respect the schema available at: http://www.thevirtualbrain.org/schema/tvb.xsd
	- the identifiers of the algorithms must be unique and they should not include on into another (e.g. "OCSML" and "OCSMLS").
   If you are bothered by the fact that a browser instance is always fired when you start TVB, go in tvb/interfaces/web/run.py and comment line 66// browser.open(BASE_URL)
	
	
	6. FRAMEWORK DESCRIPTION
	TVB Framework, is a set of the Python modules available in current TVB-Full package.
	
	TVB Framework is intended to be compatible with other science fields (e.g. Biology research), 
	where a set of algorithms, having some compatible inputs and outputs are executed in a user-defined order, 
	order that is also constraint by different available inputs/outputs.
	
	Currently, the absolute generic code that is considered the main part of TVB Framework, is all located in:
	tvb-root/tvb/trunk/tvb/core.
	Examples of specific algorithms can be found in tvb-root/tvb/trunk/tvb/analyzers, tvb-root/tvb/trunk/tvb/simulator. 
	The interface between specific algorithms and TVB Framework is done in
	tvb-root/tvb/trunk/tvb/adapters. The common language between Analyxers, Simulator and Visualizers is done through:
	tvb-root/tvb/trunk/tvb/datatypes.
	What is left, is the tvb-root/tvb/trunk/tvb/interfaces web and desktop. Because of some performance and niceness of UI,
	the interfaces are not as generic as we would like. They do not content exact references from TVB specific references,
	but they contain limitations (e.g. the menu in UI can support exactly 3 categories of processing algorithms).
	
	7. GIT ACCESS
	
	TVB Framework, is also available on GIT since 1.0.3. The repositories can be found at the following addresses:
	
	 - https://github.com/the-virtual-brain/scientific_library
	 - https://github.com/the-virtual-brain/framework_tvb
	 
	Owners for these repositories are: Marmaduke, Paula, Bogdan and Lia.


   8. UPDATE CITATION
   Registration Site:
    - main page
    - resources/license.txt
   TVB-trunk:
    - scientific_library/license.txt
    - framework_tvb/licence_tvb.txt
    - docs/manual/templates/copyright_notice.rst
    - ? all python files header ?
